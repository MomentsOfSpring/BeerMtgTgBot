from datetime import datetime, timedelta
import json
import os
from config import MAGIC_CHAT_ID, VLADA, STAS
from common import VLADOSTAS
from vlada_utils import ask_vlada_for_stas
import logging

logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ñ–∞–π–ª polls.py
CURRENT_DIR = os.path.dirname(os.path.abspath(__file__))
VOTES_FILE = os.path.join(CURRENT_DIR, 'votes.json')

def load_votes():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≥–æ–ª–æ—Å–∞ –∏–∑ —Ñ–∞–π–ª–∞"""
    if os.path.exists(VOTES_FILE):
        try:
            with open(VOTES_FILE, 'r') as f:
                return json.load(f)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≥–æ–ª–æ—Å–æ–≤: {e}")
    return {}

def save_votes(votes):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≥–æ–ª–æ—Å–∞ –≤ —Ñ–∞–π–ª"""
    try:
        with open(VOTES_FILE, 'w') as f:
            json.dump(votes, f)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≥–æ–ª–æ—Å–æ–≤: {e}")

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã —Å–ª–µ–¥—É—é—â–µ–π —Å—Ä–µ–¥—ã
def get_next_wednesday():
    today = datetime.now()
    days_ahead = (2 - today.weekday()) % 7  # 2 = —Å—Ä–µ–¥–∞
    if days_ahead == 0:
        days_ahead = 7
    return today + timedelta(days=days_ahead)


# –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ä–æ—Å–∞
def create_poll(bot):
    wednesday_date = get_next_wednesday().strftime('%d.%m.%Y')
    poll_message = bot.send_poll(
        MAGIC_CHAT_ID,
        question=f"–ú–∞–≥–∏—è, —Å—Ä–µ–¥–∞, {wednesday_date}. –ü—Ä–∏–¥–µ—à—å?",
        options=["–î–∞", "–ù–µ—Ç"],
        is_anonymous=False,
        allows_multiple_answers=False
    )
    try:
        bot.pin_chat_message(MAGIC_CHAT_ID, poll_message.message_id, disable_notification=True)
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")


# –û—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ö–æ—Ä–æ—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
def unpin_polls_and_say_hi(bot):
    try:
        chat_pins = bot.get_chat(MAGIC_CHAT_ID).pinned_message
        if chat_pins:
            bot.unpin_all_chat_messages(MAGIC_CHAT_ID)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏–∏: {e}")
    bot.send_message(MAGIC_CHAT_ID, "–£–¥–∞—á–Ω–æ–π –∏–≥—Ä—ã, –≥–æ—Å–ø–æ–¥–∞ –º–∞–≥–∏ üßô‚Äç‚ôÇÔ∏è")


# –ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–ø—Ä–æ—Å–∞
def find_active_poll(bot):
    try:
        chat = bot.get_chat(MAGIC_CHAT_ID)
        pinned_msg = chat.pinned_message
        if pinned_msg and pinned_msg.poll:
            return pinned_msg
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ –æ–ø—Ä–æ—Å–∞: {e}")
    return None


# –ü–æ–¥—Å—á–µ—Ç –≥–æ–ª–æ—Å–æ–≤ –∑–∞ "–î–∞"
def count_yes_votes(bot):
    poll_message = find_active_poll(bot)
    if not poll_message:
        return None, None
    poll = poll_message.poll
    return poll_message.message_id, poll.options

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –æ–ø—Ä–æ—Å
def handle_poll_answer(poll_answer):
    user_id = poll_answer.user.id
    option_index = poll_answer.option_ids[0]
    vote = "–î–∞" if option_index == 0 else "–ù–µ—Ç"
    
    votes = load_votes()
    votes[str(user_id)] = vote
    save_votes(votes)
    
    if user_id == VLADA and vote == "–î–∞":
        ask_vlada_for_stas()


# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
def generate_report(bot):
    votes = load_votes()
    yes_users_ids = [int(uid) for uid, v in votes.items() if v == "–î–∞"]
    if not yes_users_ids:
        report_text = "–ù–∏–∫—Ç–æ –Ω–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª '–î–ê'."
        # –û—á–∏—â–∞–µ–º –≥–æ–ª–æ—Å–∞ –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª
        save_votes({})
        return report_text, 0

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–º–µ–Ω –º–∞–≥–æ–≤ —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤ –∏ —Ä–æ–º–∞–Ω—Ç–∏–∫–æ–≤
    yes_users_names = []
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø—Ä–∏–¥—É—Ç –ª–∏ –í–ª–∞–¥–∞ –∏ –°—Ç–∞—Å—ã
    vlada_yes = VLADA in yes_users_ids
    stas_yes = STAS in yes_users_ids
    for uid in yes_users_ids:
        try:
            user = bot.get_chat_member(MAGIC_CHAT_ID, uid).user
            full_name = f"{user.first_name or ''} {user.last_name or ''}".strip()
            yes_users_names.append(full_name if full_name else str(uid))
        except Exception:
            yes_users_names.append(str(uid))

    # –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–≥—Ä–æ–∫–æ–≤
    yes_count = len(yes_users_ids)
    if vlada_yes and stas_yes:
        players = yes_count - 2 + VLADOSTAS
    elif vlada_yes:
        players = yes_count - 1 + VLADOSTAS
    else:
        players = yes_count

    # –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç–æ–ª–æ–≤ –ø—É—Ç–µ–º —Å–ª–æ–∂–Ω—ã—Ö –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤
    tables = -(-players // 4)
    report_text = (
        f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:\n\n"
        f"–ü—Ä–∏–¥—É—Ç ({players} –∏–≥—Ä–æ–∫–æ–≤):\n"
        + "\n".join(f"- {name}" for name in yes_users_names) +
        f"\n\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–æ–≤: {tables}"
    )
    
    # –û—á–∏—â–∞–µ–º –≥–æ–ª–æ—Å–∞ –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞
    save_votes({})
    
    return report_text, tables