from telebot import types
from config import MAGIC_CHAT_ID, BOSS, BARTENDER, VLADA
from utils import declension_tables
import threading
from bot_instance import bot
from commands import beer_rules
from common import VLADOSTAS, vlada_responded, set_default_vladostas, send_reservation_buttons
from polls import generate_report


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
def callback_message(callback):
    global VLADOSTAS, vlada_responded
    data = callback.data
    chat_id = callback.message.chat.id
    message_id = callback.message.message_id
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –æ—Ç –í–ª–∞–¥—ã
    if data in ['two_stas', 'one_stas'] and callback.from_user.id == VLADA:
        if not vlada_responded:
            VLADOSTAS = 3 if data == 'two_stas' else 2
            vlada_responded = True
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text="–°–ø–∞—Å–∏–±–æ, —è –ø–µ—Ä–µ–¥–∞–º"
            )
        else:
            bot.answer_callback_query(callback.id, "–û—Ç–≤–µ—Ç —É–∂–µ —É—á—Ç—ë–Ω, —Å–ø–∞—Å–∏–±–æ!")
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –æ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if data.startswith("beer_"):
        parts = data.split("_")
        if len(parts) != 3:
            bot.answer_callback_query(callback.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!", show_alert=True)
            return
        action = parts[1]
        try:
            user_id_from_button = int(parts[2])
        except ValueError:
            bot.answer_callback_query(callback.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π user_id!", show_alert=True)
            return

        if callback.from_user.id != user_id_from_button:
            bot.answer_callback_query(callback.id, "–û—Å—Ç–∞–ª—å–Ω—ã—Ö –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–ª–∏!", show_alert=True)
            return

        bot.answer_callback_query(callback.id)


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ª—é–±–≤–∏ –∫ –ø–∏–≤—É
        if action == "yes":
            bot.restrict_chat_member(
                chat_id,
                user_id_from_button,
                permissions=types.ChatPermissions(
                    can_send_messages=True,
                    can_send_media_messages=True,
                    can_send_other_messages=True,
                    can_add_web_page_previews=True
                )
            )
            bot.edit_message_text(
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –¥–æ–º–æ–π!",
                chat_id,
                message_id
            )
            full_name = f"{callback.from_user.first_name or ''} {callback.from_user.last_name or ''}".strip()
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton('üìú –ü—Ä–∞–≤–∏–ª–∞ –≥—Ä—É–ø–ø—ã', callback_data='RULES'))
            welcome_text = (
                f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {full_name}! üéâ\n\n"
                f"–û–∑–Ω–∞–∫–æ–º—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –≥—Ä—É–ø–ø—ã, —á—Ç–æ–±—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ —â–∞–º!"
            )
            bot.send_message(chat_id, welcome_text, reply_markup=markup)
            
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–µ –ª—é–±–≤–∏ –∫ –ø–∏–≤—É
        elif action == "no":
            bot.edit_message_text(
                "–£ –Ω–∞—Å —Ç–∞–∫–∏—Ö –Ω–µ –ª—é–±—è—Ç..",
                chat_id,
                message_id
            )
            bot.kick_chat_member(chat_id, user_id_from_button)
        return
    
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–∞–≤–∏–ª–∞ –≥—Ä—É–ø–ø—ã"
    elif data == 'RULES':
        beer_rules(callback.message)
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª"
    elif data == 'book_table':
        report, tables = generate_report(bot)
        bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–°—Ç–æ–ª –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω! ü™ë"
        )
        try:
            bot.send_message(MAGIC_CHAT_ID, f"–ë–æ—Å—Å –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª –∫–∞–±–∞–∫!")
            bot.send_message(BOSS, '–û—Ç–ª–∏—á–Ω–æ, —Ñ–∏–∫—Å–∏—Ä—É–µ–º —Å—Ç–æ–ª—ã.')
            bot.send_message(BARTENDER, f"–ü—Ä–∏–≤–µ—Ç, –º–∞–≥–∏ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∏–¥—É—Ç –∫ 19:00, —Ä–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º {declension_tables(tables)}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –±—Ä–æ–Ω–∏: {e}")
    elif data == 'not_come':
        markup = types.InlineKeyboardMarkup()
        back_btn = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_menu')
        sure_btn = types.InlineKeyboardButton("–¢–æ—á–Ω–æ –Ω–µ –ø—Ä–∏–¥–µ–º", callback_data='sure_not_come')
        markup.add(sure_btn, back_btn)
        bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –Ω–µ –ø—Ä–∏–¥–µ—Ç–µ?",
            reply_markup=markup
        )
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    elif data == 'back_to_menu':
        send_reservation_buttons(chat_id, message_id)
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–¢–æ—á–Ω–æ –Ω–µ –ø—Ä–∏–¥–µ–º"
    elif data == 'sure_not_come':
        bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–û—á–µ–Ω—å –∂–∞–ª—å. –ú–∞–≥–∏–∏ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –±—É–¥–µ—Ç. üò¢"
        )
        try:
            bot.send_message(MAGIC_CHAT_ID, "–°–µ–≥–æ–¥–Ω—è –º–∞–≥–∏–∏ –Ω–µ –±—É–¥–µ—Ç. –ù–∏–∫—Ç–æ –Ω–µ –ø—Ä–∏–¥–µ—Ç üò¢")
            bot.send_message(BARTENDER, "–ü—Ä–∏–≤–µ—Ç, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –º–∞–≥–∏ –Ω–µ –ø—Ä–∏–¥—É—Ç, —Å–µ–≥–æ–¥–Ω—è –±–µ–∑ –±—Ä–æ–Ω–∏")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ '–Ω–µ –ø—Ä–∏–¥–µ–º' –±–∞—Ä–º–µ–Ω—É: {e}")